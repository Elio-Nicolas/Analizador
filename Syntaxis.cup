package Principal;

//import java_cup.util.Symbol;
import java_cup.runtime.Symbol;
parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, T_dato, Cadena, If, Else, Do, While, For,
    Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_A, Parentesis_C,
    Llave_A, Llave_C, Corchete_A, Corchete_C, Main, Punto_Coma, Identificador,
    Numero, ERROR,Package,Void,Public,Estatico,Private;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR,RETORNO;




INICIO ::=
    Package Identificador Punto_Coma  
    Public Estatico Void Main Parentesis_A Cadena Corchete_A Corchete_C Identificador Parentesis_C Llave_A SENTENCIA Llave_C;

SENTENCIA ::=
    SENTENCIA DECLARACION 
   |DECLARACION 
   |SENTENCIA IF 
   |IF 
   |SENTENCIA IF_ELSE 
   |IF_ELSE 
   |SENTENCIA WHILE 
   |WHILE 
   |SENTENCIA DO_WHILE
   |DO_WHILE 
   |SENTENCIA FOR 
   |FOR
;
DECLARACION ::=
    Identificador T_dato Punto_Coma |
    Identificador T_dato Op_atribucion Numero Punto_Coma |
    Identificador T_dato Igual Numero Punto_Coma |
    Identificador T_dato Op_incremento Punto_Coma |
    Cadena Identificador Op_atribucion Comillas Comillas Punto_Coma |
    Cadena Identificador Igual Comillas Comillas Punto_Coma |
    Cadena Identificador Op_atribucion Comillas Identificador Comillas Punto_Coma |
    Cadena Identificador Igual Comillas Identificador Comillas Punto_Coma
;
IF ::= If Parentesis_A SENTENCIA_BOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C
;
SENTENCIA_BOOLEANA ::=
    Op_booleano |
    Identificador Op_relacional Op_booleano |
    Identificador Op_relacional Numero |
    Identificador Op_relacional Identificador |
    Identificador Op_relacional Comillas Comillas |
    Identificador Op_relacional Comillas Identificador Comillas
;
IF_ELSE ::= If Parentesis_A SENTENCIA_BOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C Else Llave_A SENTENCIA Llave_C
;
WHILE ::= WHILE Parentesis_A SENTENCIA_BOOLEANA Parentesis_C Llave_A SENTENCIA Llave_C
;
DO_WHILE ::= Do Llave_A SENTENCIA Llave_C WHILE Parentesis_A SENTENCIA_BOOLEANA Parentesis_C Punto_Coma
;
FOR ::= For Parentesis_A SENTENCIA_FOR Parentesis_C Llave_A SENTENCIA Llave_C
;
SENTENCIA_FOR ::=
    T_dato Identificador Igual Numero Punto_Coma SENTENCIA_BOOLEANA Punto_Coma DECLARACION_FOR |
    Identificador Igual Numero Punto_Coma SENTENCIA_BOOLEANA Punto_Coma DECLARACION_FOR
;
DECLARACION_FOR ::=
    Identificador Op_atribucion Numero |
    Identificador Op_incremento |
    Op_incremento Identificador
;
